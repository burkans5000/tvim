#!/bin/bash

this=gvim # vim|gvim|nvim etc...

# TODO: add ability to create new instance with desktop number
# TODO: add ability to create new instance with custom name

existing_server_list=(`$this --serverlist`)

if [ ${#existing_server_list[@]} != 0 ]; then

    echo "Select $this server:"

    let 'i = 1'
    for server in ${existing_server_list[@]}; do
        echo "$i) $server"
        let 'i = i + 1'
    done

    read server_number

    # TODO: add proper parser
    let 'server_number = server_number - 1'
    server=${existing_server_list[$server_number]}

else

    # TODO: Do I really need this?
    # Get this desktop name
    window_manager="$(echo $XDG_CURRENT_DESKTOP)"
    case $window_manager in
        "i3")
            server=desktop_$( \
                i3-msg -t get_workspaces \
                | jq '.[] | select(.focused==true).name' \
                | cut -d"\"" -f2)
            ;;
        *)
            number_of_desktops=$( \
                xprop -root -notype _NET_NUMBER_OF_DESKTOPS \
                | perl -pe 's/.*?= (\d+)/$1/')

            if [ "$number_of_desktops" = "1" ]; then
                server=viewport_$( \
                    xprop -root -notype _NET_DESKTOP_VIEWPORT |
                | perl -pe 's/.*?= (\d+), (\d+)/$1x$2/')
            else
                server=desktop_$( \
                    xprop -root -notype _NET_CURRENT_DESKTOP \
                    | perl -pe 's/.*?= (\d+)/$1/')
            fi
            ;;
    esac
fi

# Convert to upper case
server=${server^^}

if [ $# != 0 ]; then
	exec $this --servername $server --remote-tab-silent "$@"
elif ! $this --serverlist | grep -q $server; then
	exec $this --servername $server
fi
